using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading;
namespace Fotboll_betting
{
    class Program
    {
        static void AdminPage()
        {
            Console.Clear();
            Console.WriteLine("Välkommen! Du är inloggad som admin.");
            Console.WriteLine("[1] - Lägg till en match");
            Console.WriteLine("[2] - Ta bort en match");
            Console.WriteLine("[3] - Sätt/Ändra resultat i en match");
            Console.WriteLine("[4] - Lägg till ett konto");
            Console.WriteLine("[5] - ");
            Console.WriteLine("[6] - ");
            Console.WriteLine("[7] - ");
            Console.WriteLine("[8] - ");
            Console.WriteLine("[9] - ");
            Console.ReadKey();
        }
        static void UserPage(string user)
        {
            Console.Clear();
            Console.WriteLine("Välkommen " + user + "!");
        }
        static string Start(List<string> accounts)
        {
            string returning = "n";
            bool running = true;
            while (running)
            {
                Console.WriteLine("Jacobs sprotbetting!");
                Console.WriteLine("Användarnamn: ");
                string userInput = Console.ReadLine();
                Console.WriteLine("Lössenord: ");
                string passwordInput = Console.ReadLine();
                if (accounts.Contains(userInput))
                {
                    for (int i = 0; i != accounts.Count; i += 2)
                    {
                        if (accounts[i] == userInput)
                        {
                            if (accounts[i + 1] == passwordInput)
                            {
                                returning = accounts[i];
                                running = false;
                                break;
                            }
                            else
                            {
                                Console.Clear();
                                Console.WriteLine("Fel användarnamn eller lössenord.");
                                break;
                            }
                        }
                    }
                }
                else
                {
                    Console.Clear();
                    Console.WriteLine("Fel användarnamn eller lössenord.");
                }
            }
            return returning;
        }
        static void Main(string[] args)
        {
            List<string> accounts = ReadFile("accounts.txt");
            string user = Start(accounts);
            if(user == "admin")
            {
                AdminPage();
            }
            else
            {
                UserPage(user);
            }
        }
        static List<string> ReadFile(string filename)
        {
            List<string> rowsInFile = new List<string>();
            String line;
            try
            {
                StreamReader sr = new StreamReader(filename);
                line = sr.ReadLine();
                rowsInFile.Add(line);
                while (line != null)
                {
                    line = sr.ReadLine();
                    if (line != null)
                    {
                        rowsInFile.Add(line);
                    }
                }
                sr.Close();
            }
            catch (Exception e)
            {
                Console.WriteLine("Exception: " + e.Message);
            }
            finally
            {

            }
            return rowsInFile;
        }
    }
}




/*
loggin
se matcher
betta på matcher
se vad folk har tippat
admin ska kunna lägga till matcher och resultat
*/
